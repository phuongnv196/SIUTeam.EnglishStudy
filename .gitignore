# ==============================================================================
# Global .gitignore for SIUTeam.EnglishStudy Project
# ==============================================================================

# OS Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
*.tmp
*.temp

# ==============================================================================
# .NET Backend
# ==============================================================================

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these files may be checked in
*.azurePubxml.user

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
CConvertReport*

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# ==============================================================================
# Frontend (React/TypeScript/Vite)
# ==============================================================================

# Dependencies
frontend/node_modules/
frontend/.pnp
frontend/.pnp.js

# Testing
frontend/coverage/

# Production builds
frontend/build/
frontend/dist/
frontend/dist-ssr/

# Environment variables
frontend/.env
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local

# Runtime data
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/pnpm-debug.log*
frontend/lerna-debug.log*

# Vite
frontend/*.local

# Editor directories and files
frontend/.vscode/*
!frontend/.vscode/extensions.json
frontend/.idea
frontend/*.suo
frontend/*.ntvs*
frontend/*.njsproj
frontend/*.sln
frontend/*.sw?

# ==============================================================================
# Python Backend
# ==============================================================================

# Byte-compiled / optimized / DLL files
backend_python/__pycache__/
backend_python/*.py[cod]
backend_python/*$py.class

# C extensions
backend_python/*.so

# Distribution / packaging
backend_python/.Python
backend_python/build/
backend_python/develop-eggs/
backend_python/dist/
backend_python/downloads/
backend_python/eggs/
backend_python/.eggs/
backend_python/lib/
backend_python/lib64/
backend_python/parts/
backend_python/sdist/
backend_python/var/
backend_python/wheels/
backend_python/share/python-wheels/
backend_python/*.egg-info/
backend_python/.installed.cfg
backend_python/*.egg
backend_python/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
backend_python/*.manifest
backend_python/*.spec

# Installer logs
backend_python/pip-log.txt
backend_python/pip-delete-this-directory.txt

# Unit test / coverage reports
backend_python/htmlcov/
backend_python/.tox/
backend_python/.nox/
backend_python/.coverage
backend_python/.coverage.*
backend_python/.cache
backend_python/nosetests.xml
backend_python/coverage.xml
backend_python/*.cover
backend_python/*.py,cover
backend_python/.hypothesis/
backend_python/.pytest_cache/
backend_python/cover/

# Translations
backend_python/*.mo
backend_python/*.pot

# Django stuff:
backend_python/*.log
backend_python/local_settings.py
backend_python/db.sqlite3
backend_python/db.sqlite3-journal

# Flask stuff:
backend_python/instance/
backend_python/.webassets-cache

# Scrapy stuff:
backend_python/.scrapy

# Sphinx documentation
backend_python/docs/_build/

# PyBuilder
backend_python/.pybuilder/
backend_python/target/

# Jupyter Notebook
backend_python/.ipynb_checkpoints

# IPython
backend_python/profile_default/
backend_python/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
backend_python/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
backend_python/Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
backend_python/poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
backend_python/pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
backend_python/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
backend_python/__pypackages__/

# Celery stuff
backend_python/celerybeat-schedule
backend_python/celerybeat.pid

# SageMath parsed files
backend_python/*.sage.py

# Environments
backend_python/.env
backend_python/.venv
backend_python/env/
backend_python/venv/
backend_python/ENV/
backend_python/env.bak/
backend_python/venv.bak/

# Spyder project settings
backend_python/.spyderproject
backend_python/.spyproject

# Rope project settings
backend_python/.ropeproject

# mkdocs documentation
backend_python/site

# mypy
backend_python/.mypy_cache/
backend_python/.dmypy.json
backend_python/dmypy.json

# Pyre type checker
backend_python/.pyre/

# pytype static type analyzer
backend_python/.pytype/

# Cython debug symbols
backend_python/cython_debug/

# Audio/Video/Media files
backend_python/audios/
backend_python/uploads/
backend_python/static/uploads/
backend_python/media/

# ==============================================================================
# IDEs and Editors
# ==============================================================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# ==============================================================================
# Database and Configuration
# ==============================================================================

# Database files
*.db
*.sqlite
*.sqlite3
*.mdb
*.accdb

# Configuration files with sensitive data
appsettings.Production.json
appsettings.Staging.json
**/appsettings.*.json
!**/appsettings.json
!**/appsettings.Development.json

# Connection strings and secrets
ConnectionStrings.config
secrets.json
.env.production
.env.staging

# ==============================================================================
# Logs and Temporary Files
# ==============================================================================

# Log files
*.log
logs/
log/

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# ==============================================================================
# Build and Package Files
# ==============================================================================

# Package files
*.zip
*.tar.gz
*.rar
*.7z

# Documentation builds
docs/_build/
site/

# ==============================================================================
# Security and Certificates
# ==============================================================================

# Certificate files
*.pfx
*.p12
*.pem
*.crt
*.cer
*.key

# JWT secrets
jwtsettings.json

# ==============================================================================
# Project Specific
# ==============================================================================

# Custom uploads and generated files
**/uploads/
**/generated/
**/temp/

# AI model files (if any)
*.pkl
*.model
*.h5
*.weights

# Large media files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm

# Audio files
*.mp3
*.wav
*.flac
*.aac
*.ogg

# User-specific files
.user
*.user
